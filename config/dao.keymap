/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt {
    quick_tap_ms = <200>;
    tapping-term-ms = <250>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        ctrl_shift_esc {
            bindings = <&kp LS(LC(ESCAPE))>;
            key-positions = <0 1>;
        };

        ctrl_alt_del {
            bindings = <&kp LC(LA(DELETE))>;
            key-positions = <12 13>;
        };

        left_square_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 5>;
        };

        right_square_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
        };

        alt_print_scr {
            bindings = <&kp LA(PRINTSCREEN)>;
            key-positions = <16 17>;
        };

        right_bracket {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        left_curly_bracket {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };

        right_curly_bracket {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };

        assig {
            bindings = <&assignment>;
            key-positions = <15 16>;
        };

        send_prm {
            bindings = <&send_param>;
            key-positions = <19 20>;
        };
    };

    macros {
        assignment: assignment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL>;
            label = "ASSIGNMENT";
        };

        send_param: send_param {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "SEND_PARAM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI GRAVE      &kp Q  &kp W  &kp E        &kp R            &kp T           &kp Y          &kp U           &kp I        &kp O    &kp P     &kp LBKT
&mt LEFT_ALT MINUS  &kp A  &kp S  &kp D        &lt 4 F          &kp G           &kp H          &lt 4 J         &kp K        &kp L    &kp SEMI  &mt RIGHT_ALT SQT
&mt LCTRL BSLH      &kp Z  &kp X  &kp C        &kp V            &kp B           &kp N          &kp M           &kp COMMA    &kp DOT  &kp FSLH  &mt RCTRL RBKT
                                  &lt RSE TAB  &mt LSHFT SPACE  &lt LWR ESCAPE  &lt LWR ENTER  &mt RSHFT BSPC  &lt RSE DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F12        &kp F1    &kp F2  &kp F3       &kp F4    &kp F5     &kp F6     &kp F7    &kp F8       &kp F9    &kp F10   &kp F11
&mt LEFT_ALT MINUS  &kp EXCL  &kp AT  &kp HASH     &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR     &kp LPAR  &kp RPAR  &mt RIGHT_ALT EQUAL
&mt LCTRL KP_PLUS   &kp N1    &kp N2  &kp N3       &kp N4    &kp N5     &kp N6     &kp N7    &kp N8       &kp N9    &kp N0    &kp RCTRL
                                      &lt ADJ TAB  &trans    &trans     &trans     &trans    &lt ADJ DEL
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM     &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_NEXT        &kp HOME  &kp UP_ARROW    &kp PG_UP  &kp PRINTSCREEN  &kp CLCK
&mt LEFT_ALT MINUS  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp EQUAL       &kp C_PLAY_PAUSE  &kp LEFT  &kp SCROLLLOCK  &kp RIGHT  &kp INS          &mt RIGHT_ALT K_APP
&mt LCTRL KP_PLUS   &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_PREV        &kp END   &kp DOWN        &kp PG_DN  &kp PAUSE_BREAK  &kp RCTRL
                                                &trans     &trans     &lt ADJ ESCAPE  &lt ADJ ENTER     &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &kp K_SLEEP   &kp K_POWER   &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &trans        &none         &trans
            >;
        };

        add_layer {
            bindings = <
&kp ESCAPE  &trans                &trans                &trans                &trans                &trans          &trans                &trans          &trans          &trans          &trans          &trans
&trans      &kp LC(X)             &kp LC(C)             &kp LC(V)             &trans                &trans          &trans                &trans          &trans          &trans          &trans          &trans
&trans      &kp LC(LA(NUMBER_1))  &kp LC(LA(NUMBER_2))  &kp LC(LA(NUMBER_3))  &kp LC(LA(NUMBER_4))  &kp LC(LA(N5))  &kp LC(LA(NUMBER_6))  &kp LC(LA(N7))  &kp LC(LA(N8))  &kp LC(LA(N9))  &kp LC(LA(N0))  &trans
                                                        &kp DELETE            &kp BACKSPACE         &kp ENTER       &trans                &trans          &trans
            >;
        };
    };
};
